//15.1-restaurant collection
db.restaurants.insertMany([
{
name:'baiat',
adress:{

        city : 'Nazareth',
        street: 'hamaayan 8',
        coordinates : [16, 499, 90]
        },
typeOfCuisine : 'meat',
isKosher: false,
reviews: 
[{date: Date(), score: 7.5},
 {date: Date(), score: 9}, 
 {date: Date(), score: 9.5}]        

},
{
name:'rosemarie',
adress:{

        city: 'Haifa',
        street: 'hamaayan 9',
        coordinates: [20, 450, 89]
        },
typeOfCuisine: 'meat',
isKosher: true,
reviews: 
[{date: Date(), score: 8},
 {date: Date(), score: 9}, 
 {date: Date(), score: 10}]        

},
{
name:'ronen',
adress:{

        city : 'Haifa',
        street: 'baulos 6',
        coordinates : [14, 400, 60]
        },
typeOfCuisine : 'Italian',
isKosher: false,
reviews: 
[{date: Date(), score: 10},
 {date: Date(), score: 9}, 
 {date: Date(), score: 9.5}]        

},
{
name:'seaHouse',
adress:{

        city : 'RamatYashai',
        street: 'hamaayan 12',
        coordinates : [14, 499, 89]
        },
typeOfCuisine : 'seafood',
isKosher: false,
reviews: 
[{date: Date(), score: 9},
 {date: Date(), score: 9}, 
 {date: Date(), score: 7}]        

}])


//15.2-queries

1.1 â€“ Write a MongoDb query to display all the documents in the restaurant collection.
db.restaurants.find().pretty()

1.2 - Write a MongoDb query to display all restaurants that
have a specific cuisine

db.restaurants.find({typeOfCuisine : 'Italian'})

1.3- Write a MongoDb query that displays only kosher
restaurants

db.restaurants.find({isKosher : true})

1.4 - Write a MongoDb query that displays only a specific cities restaurants

db.restaurants.find({"adress.city":'Haifa'})  

1.5 - Write a MongoDb query to display a specific restaurants
address

db.restaurants.find({"adress.city":'Nazareth', "adress.street":'hamaayan 8'})  

1.6 - Write a MongoDb query to display a specific restaurants
coordinates

db.restaurants.find({"adress.coordinates": [14, 400, 60]}).pretty()  

1.7. - Write a MongoDb query that should display all
restaurants in ascending order by restaurant name.

db.restaurants.find().sort( { "name": 1 } ).pretty()

1.8 - Write a MongoDb query that should display all restaurants in ascending order by city names.
db.restaurants.find().sort( { "adress.city": 1 } ).pretty()

1.9 - Update a specific restaurant's name

db.restaurants.update({name:'baiat'},{$set:{name:'baiaaat'}})

1.10 - Update a specific restaurant by adding a new review.
db.restaurants.updateOne({name:'ronen'},{$push:{reviews[3]:"score"}})

